basePath: /
definitions:
  main.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  main.ResponseMessage:
    properties:
      message:
        type: string
    type: object
  main.ShoppingItem:
    properties:
      amount:
        example: 2
        type: integer
      name:
        example: Milk
        type: string
    type: object
info:
  contact: {}
  description: A simple API to manage shopping items with PostgreSQL
  title: Shopping API
  version: "1.0"
paths:
  /api/shoppingItems:
    get:
      description: Retrieve all shopping items
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.ShoppingItem'
            type: array
      summary: Get all shopping items
      tags:
      - Shopping Items API
    post:
      description: Add a new item to the shopping list
      parameters:
      - description: New shopping item
        in: body
        name: shoppingItem
        required: true
        schema:
          $ref: '#/definitions/main.ShoppingItem'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.ShoppingItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Add a new shopping item
      tags:
      - Shopping Items API
  /api/shoppingItems/{name}:
    delete:
      description: Delete a specific shopping item by its name
      parameters:
      - description: Item name
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Delete a shopping item by name
      tags:
      - Shopping Items API
    get:
      description: Retrieve a specific shopping item by its name
      parameters:
      - description: Item name
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ShoppingItem'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get a shopping item by name
      tags:
      - Shopping Items API
    put:
      description: Update a specific shopping item by its name
      parameters:
      - description: Item name
        in: path
        name: name
        required: true
        type: string
      - description: Updated shopping item
        in: body
        name: shoppingItem
        required: true
        schema:
          $ref: '#/definitions/main.ShoppingItem'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ShoppingItem'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Update a shopping item by name
      tags:
      - Shopping Items API
swagger: "2.0"
